name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    # binary needs to be built for the regression tests
    - name: Build
      run: go build -v -o bin/sgen sgen.go

    - name: Test
      run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        install-mode: binary
        version: latest

  build:
    runs-on: ${{ matrix.runson }}
    strategy:
      matrix:
        include:
          - {goos: "linux", goarch: "amd64", runson: "ubuntu-latest"}
          - {goos: "linux", goarch: "arm64", runson: "ubuntu-latest"}
          - {goos: "darwin", goarch: "amd64", runson: "macos-latest"}
          - {goos: "darwin", goarch: "arm64", runson: "macos-latest"}
      fail-fast: false
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Build
      run: GOOS=${{matrix.goos}} GOARCH=${{matrix.goarch}} go build -v sgen.go
